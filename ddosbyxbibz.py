#!/usr/bin/env python3
# MIT License

#Copyright (c) 2025 - 2099 MR. Nexo444

#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

#========================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==================================================================================================================================================≠==========================================

# Additional Terms and Conditions

#1. Modification Notice: Any modified versions must be clearly marked as such and must not be represented as the original software.

#2. Commercial Use: The software may be used for commercial purposes, but the original copyright notice must remain intact.

#3. Attribution: Credit must be given to the original author (MR. Nexo444) in any distributions or derivative works.

#4. No Warranty: The author is not responsible for any damages or liabilities caused by the use of this software.

#5. Redistribution: Redistribution is permitted provided the license terms and copyright notice are included with all copies.

#6. Ethical Use: This software must not be used for illegal, malicious, or unethical purposes.

#7. Source Code: The source code may be used as a learning resource, but direct copying without modification is discouraged.

#8. Trademarks: This license does not grant permission to use the trade names, trademarks, service marks, or product names of the author.
# Script Obfuscated oleh Xbibz Official - MR. Nexo444
# DILARANG RECODE / RENAME ANJG!
# YANG RECODE KONTOL KAU MELEDAK!!!
    
    # ===== STRICT LICENSE AGREEMENT - X - DDoS (Beta) v2.0 =====  
# === Copyright (c) 2025 - 2099 Xbibz Official (MR-Nexo 477) ===  
#  
# **VIOLATION WILL RESULT IN LEGAL ACTION + BLACKLISTING.**  
#  
# #1. **NO RENAMING**  
# # - You are **FORBIDDEN** to rename script, author, or copyright.  
# # - Original branding **MUST REMAIN** (GitHub/Telegram/YouTube).  
#  
# #2. **NO ILLEGAL USE**  
# # - For **EDUCATIONAL PURPOSES ONLY**.  
# # - Misuse = **YOUR RESPONSIBILITY**.  
#  
# #3. **REDISTRIBUTION RULES**  
# # - Allowed **ONLY IF**:  
# #   - License + copyright are **UNTOUCHED**.  
# #   - **NOT SOLD** for profit.  
#  
# #4. **MODIFICATIONS**  
# # - Must add **"Modified by [Name]"**.  
# # - **NO CLAIM** of original ownership.  
#  
# #5. **COMMERCIAL USE**  
# # - **STRICTLY PROHIBITED** without written permission.  
#  
# #6. **LEGAL CONSEQUENCES**  
# # - Violators will be:  
# #   - **BLACKLISTED** permanently.  
# #   - **REPORTED** to GitHub/Termux.  
# #   - **SUED** if terms are breached.  
#  
# === ORIGINAL CREDITS (DO NOT REMOVE!) ===  
# # Author: MR-Nexo 477  
# # GitHub: github.com/XbibzModder777  
# # Telegram: t.me/XbibzOfficial  
# # YouTube: @Xbibz Official  
#  
# === BY USING THIS SCRIPT, YOU AGREE TO THESE TERMS. ===  
# === UNAUTHORIZED CHANGES = IMMEDIATE LEGAL ACTION. ===  
import base64, zlib, marshal, sys, os, hashlib, random, string

def cqiIkcOXpUji():
    WMEXWCHeCPaG = {'layer_0': 'b86fcf9815618d5f5696e1d2bf411a3a', 'layer_1': 'd75f0524abb68ebbe357bf4009457317', 'layer_2': '3038ea24ad1ddb3d8c43b16850383f8d', 'layer_3': 'fe0b1d0d73a19bc68687605e5fa5398d', 'layer_4': '9a1ec73e71bbafc0897ba10b5700ec95', 'layer_5': '62e1d17e99089846fe8370a19383cbef', 'layer_6': '3bff25445959a24149b96d5ecf1218f0', 'layer_7': '60fd49bc7c390fa44c5354db7312c6fa', 'layer_8': 'e19572b8dbeda68e1ad1335aabeb7a30', 'layer_9': '566404e60a421b31e80b0ffd5144abc5'}
    ZvWcWuptWkub = ''
    
    
    mNMeOuTqRbAs = marshal.loads(base64.b64decode(ZvWcWuptWkub))
    cmjxEAQhUcbj = {}
    exec(mNMeOuTqRbAs, cmjxEAQhUcbj)
    ZvWcWuptWkub = cmjxEAQhUcbj['_result']
    
    
    parts = ZvWcWuptWkub.split('|')
    ZvWcWuptWkub = ''.join([base64.b64decode(part).decode() for part in parts])
    
    
    key = WMEXWCHeCPaG['layer_7']
    mNMeOuTqRbAs = base64.b64decode(ZvWcWuptWkub).decode('latin-1')
    ZvWcWuptWkub = ''
    for i, char in enumerate(mNMeOuTqRbAs):
        key_char = key[i % len(key)]
        ZvWcWuptWkub += chr(ord(char) ^ ord(key_char))
    
    
    chunk_size, mNMeOuTqRbAs = ZvWcWuptWkub.split('|', 1)
    chunk_size = int(chunk_size)
    chunks = [mNMeOuTqRbAs[i:i+chunk_size] for i in range(0, len(mNMeOuTqRbAs), chunk_size)]
    ZvWcWuptWkub = ''.join([chunk[::-1] for chunk in chunks])
    
    
    shift, mNMeOuTqRbAs = ZvWcWuptWkub.split('|', 1)
    shift = int(shift)
    ZvWcWuptWkub = ''
    for char in mNMeOuTqRbAs:
        if char.isalpha():
            ascii_offset = 65 if char.isupper() else 97
            ZvWcWuptWkub += chr((ord(char) - ascii_offset - shift) % 26 + ascii_offset)
        else:
            ZvWcWuptWkub += char
    
    
    try:
        if '|' in ZvWcWuptWkub:
            padding_len, hex_data = ZvWcWuptWkub.split('|', 1)
            padding_len = int(padding_len)
            if padding_len == 0:
                # Fallback mode
                ZvWcWuptWkub = base64.b64decode(hex_data).decode('utf-8')
            else:
                
                hex_content = hex_data[padding_len:-padding_len]
                ZvWcWuptWkub = bytes.fromhex(hex_content).decode('utf-8')
        else:
            
            clean_hex = ''
            for char in ZvWcWuptWkub:
                if char in '0123456789abcdef':
                    clean_hex += char
            ZvWcWuptWkub = bytes.fromhex(clean_hex).decode('utf-8')
    except Exception as e:
        print(f"Layer 5 hex error: {e}")
        try:
            ZvWcWuptWkub = base64.b64decode(ZvWcWuptWkub).decode('utf-8')
        except:
            pass
    
    
    ZvWcWuptWkub = base64.b64decode(ZvWcWuptWkub).decode()
    
    
    try:
        mNMeOuTqRbAs = marshal.loads(base64.b64decode(ZvWcWuptWkub))
        cmjxEAQhUcbj = {}
        exec(mNMeOuTqRbAs, cmjxEAQhUcbj)
        ZvWcWuptWkub = cmjxEAQhUcbj['get_data']()
    except:
        ZvWcWuptWkub = base64.b64decode(ZvWcWuptWkub).decode()
    
    
    try:
        if '|' in ZvWcWuptWkub:
            checksum, compressed_data = ZvWcWuptWkub.split('|', 1)
            checksum = int(checksum)
            if checksum == 0:
                
                ZvWcWuptWkub = base64.b64decode(compressed_data).decode('utf-8')
            else:
                
                compressed_bytes = base64.b64decode(compressed_data)
                if zlib.crc32(compressed_bytes) == checksum:
                    ZvWcWuptWkub = zlib.decompress(compressed_bytes).decode('utf-8')
                else:
             
                    ZvWcWuptWkub = zlib.decompress(compressed_bytes).decode('utf-8')
        else:
            # Old format compatibility
            ZvWcWuptWkub = zlib.decompress(base64.b64decode(ZvWcWuptWkub)).decode('utf-8')
    except Exception as e:
        print(f"Layer 2 decompression error: {e}")
        # Try as base64 only
        try:
            ZvWcWuptWkub = base64.b64decode(ZvWcWuptWkub).decode('utf-8')
        except:
            pass
    
    
    try:
        if '|' in ZvWcWuptWkub:
            iterations, mNMeOuTqRbAs = ZvWcWuptWkub.split('|', 1)
            iterations = int(base64.b64decode(iterations).decode())
            ZvWcWuptWkub = mNMeOuTqRbAs.encode()
            for _ in range(iterations):
                ZvWcWuptWkub = base64.b64decode(ZvWcWuptWkub)
            ZvWcWuptWkub = ZvWcWuptWkub.decode('utf-8')
        else:
            
            ZvWcWuptWkub = base64.b64decode(ZvWcWuptWkub).decode('utf-8')
    except Exception as e:
        print(f"Layer 1 base64 error: {e}")
        ZvWcWuptWkub = base64.b64decode(ZvWcWuptWkub).decode('utf-8')
    
    return ZvWcWuptWkub

if __name__ == "__main__":
    try:
        cmjxEAQhUcbj = cqiIkcOXpUji()
        exec(cmjxEAQhUcbj)
    except Exception as e:
        print(f"Execution error: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
